{"ast":null,"code":"var _jsxFileName = \"/Users/chchen/Andy\\u66AB\\u5B58/React_SideProject/TravelList/src/gmap/GMap.js\",\n    _s = $RefreshSig$();\n\nimport { GoogleMap, LoadScript, MarkerClusterer, Marker, InfoWindow } from \"@react-google-maps/api\";\nimport { useState } from \"react\";\nimport classes from \"./GMap.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mapContainerStyle = {\n  height: \"100%\",\n  width: \"100%\"\n};\nconst divStyle = {\n  background: `white`,\n  border: `1px solid #ccc`,\n  padding: 15\n};\nconst center = {\n  lat: 50.08732698109427,\n  lng: 14.42779541015625\n};\nconst locations = [{\n  lat: -31.56391,\n  lng: 147.154312\n}];\nconst options = {\n  imagePath: \"https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m\" // so you must have m1.png, m2.png, m3.png, m4.png, m5.png and m6.png in that folder\n\n};\n\nfunction createKey(location) {\n  return location.lat + location.lng;\n}\n\nconst GMap = props => {\n  _s();\n\n  const [infoWinState, setInfoWin] = useState(false);\n  const [infoLocationState, setInfoLocationWin] = useState({});\n  const [tmepMarkerState, setTempMarker] = useState({});\n  let position = {}; //clean the temp marker gps so after submit and submit again would not\n\n  if (props.cleanFlag && tmepMarkerState) {\n    setTempMarker({});\n    props.onGetNewMarker({});\n  }\n\n  const mapClickHandler = e => {\n    const newMarker = {\n      lat: e.latLng.lat(),\n      lng: e.latLng.lng()\n    };\n\n    if (!infoWinState) {\n      //   setNewMarker((prevLoca)=>{\n      //     return ([...prevLoca, newMarker]);\n      //   })\n      props.onGetNewMarker(newMarker);\n      setTempMarker(newMarker);\n      console.log(e);\n    } else {\n      // if the info window is showed, click map once time to close it and not to create new one marker\n      setInfoWin(false);\n    } // .then((res)=>{\n    //   console.log(res);\n    //   let x = res.json();\n    //   console.log(x);\n    //   return(x);\n    // }).then((data)=>{console.log({data})});  \n    // await res.then((data)=>{\n    //   console.log(data)\n    // });\n    // console.log(y);\n    //  res.then((data)=>{\n    //     console.log(data);\n    //  });\n    //  console.log(x.plus_code);\n\n  };\n\n  const markerClickHandler = e => {\n    position = {\n      lat: e.latLng.lat(),\n      lng: e.latLng.lng()\n    };\n    setTempMarker({}); //set the info window gps & state\n\n    setInfoLocationWin(position);\n    setInfoWin(true);\n    console.log(\"marker click\"); //send gps to inpuArea to get data\n\n    props.onGetMarkerInfo(position);\n  };\n\n  const onload = infoWindow => {\n    console.log(\"infoWindow: \", infoWindow);\n  };\n\n  console.log(tmepMarkerState);\n  console.log(\"end end tmepMarkerState\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.gmapconfig,\n    children: /*#__PURE__*/_jsxDEV(LoadScript, {\n      googleMapsApiKey: \"AIzaSyAR3-8wOXn2f7NcmF4cOF6xkTHqH5bJpqY\",\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        id: \"marker-example\",\n        mapContainerStyle: mapContainerStyle,\n        zoom: 15,\n        center: center,\n        onClick: mapClickHandler,\n        children: [\" \", console.log(tmepMarkerState), Object.keys(tmepMarkerState).length && /*#__PURE__*/_jsxDEV(Marker, {\n          position: tmepMarkerState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), Object.keys(props.pinMarker).length && /*#__PURE__*/_jsxDEV(MarkerClusterer, {\n          options: options,\n          children: clusterer => props.pinMarker.map(info => {\n            {\n              /* <Marker key={createKey(info.gps)} position={info.gps} clusterer={clusterer}  onClick={markerClickHandler} draggable={true} onDragStart={dragStartHandler} onDragEnd={dropRefreshHandler}/>  */\n            }\n            return /*#__PURE__*/_jsxDEV(Marker, {\n              position: info.gps,\n              clusterer: clusterer,\n              onClick: markerClickHandler\n            }, createKey(info.gps), false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), infoWinState && !props.info.del && /*#__PURE__*/_jsxDEV(InfoWindow, {\n          onLoad: onload,\n          position: infoLocationState,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              children: props.info.location\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: props.info.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GMap, \"mY5ifipWT/4MFJsHN6PaPjhWj2Q=\");\n\n_c = GMap;\nexport default GMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"GMap\");","map":{"version":3,"names":["GoogleMap","LoadScript","MarkerClusterer","Marker","InfoWindow","useState","classes","mapContainerStyle","height","width","divStyle","background","border","padding","center","lat","lng","locations","options","imagePath","createKey","location","GMap","props","infoWinState","setInfoWin","infoLocationState","setInfoLocationWin","tmepMarkerState","setTempMarker","position","cleanFlag","onGetNewMarker","mapClickHandler","e","newMarker","latLng","console","log","markerClickHandler","onGetMarkerInfo","onload","infoWindow","gmapconfig","Object","keys","length","pinMarker","clusterer","map","info","gps","del","text"],"sources":["/Users/chchen/Andy暫存/React_SideProject/TravelList/src/gmap/GMap.js"],"sourcesContent":["import {\n  GoogleMap,\n  LoadScript,\n  MarkerClusterer,\n  Marker,\n  InfoWindow,\n} from \"@react-google-maps/api\";\nimport { useState } from \"react\";\n\nimport classes from \"./GMap.module.css\";\n\nconst mapContainerStyle = {\n  height: \"100%\",\n  width: \"100%\",\n};\n\nconst divStyle = {\n  background: `white`,\n  border: `1px solid #ccc`,\n  padding: 15,\n};\n\nconst center = { lat: 50.08732698109427, lng: 14.42779541015625 };\n\nconst locations = [{ lat: -31.56391, lng: 147.154312 }];\n\nconst options = {\n  imagePath:\n    \"https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m\", // so you must have m1.png, m2.png, m3.png, m4.png, m5.png and m6.png in that folder\n};\n\nfunction createKey(location) {\n  return location.lat + location.lng;\n}\n\nconst GMap = (props) => {\n  const [infoWinState, setInfoWin] = useState(false);\n  const [infoLocationState, setInfoLocationWin] = useState({});\n  const [tmepMarkerState, setTempMarker] = useState({});\n  let position = {};\n\n  //clean the temp marker gps so after submit and submit again would not\n  if (props.cleanFlag && tmepMarkerState) {\n    setTempMarker({});\n    props.onGetNewMarker({});\n  }\n\n  const mapClickHandler =  (e) => {\n    const newMarker = { lat: e.latLng.lat(), lng: e.latLng.lng() };\n    if (!infoWinState) {\n      //   setNewMarker((prevLoca)=>{\n      //     return ([...prevLoca, newMarker]);\n      //   })\n      props.onGetNewMarker(newMarker);\n      setTempMarker(newMarker);\n      console.log(e);\n    } else {\n      // if the info window is showed, click map once time to close it and not to create new one marker\n      setInfoWin(false);\n    }\n\n    \n\n\n\n    \n    \n    \n      // .then((res)=>{\n      //   console.log(res);\n      //   let x = res.json();\n      //   console.log(x);\n      //   return(x);\n      // }).then((data)=>{console.log({data})});  \n    \n    // await res.then((data)=>{\n    //   console.log(data)\n    // });\n    \n    // console.log(y);\n    //  res.then((data)=>{\n    //     console.log(data);\n    //  });\n    //  console.log(x.plus_code);\n  };\n\n  const markerClickHandler = (e) => {\n    position = { lat: e.latLng.lat(), lng: e.latLng.lng() };\n    setTempMarker({});\n    //set the info window gps & state\n    setInfoLocationWin(position);\n    setInfoWin(true);\n    console.log(\"marker click\");\n    //send gps to inpuArea to get data\n\n    props.onGetMarkerInfo(position);\n  };\n\n  const onload = (infoWindow) => {\n    console.log(\"infoWindow: \", infoWindow);\n  };\n  console.log(tmepMarkerState);\n  console.log(\"end end tmepMarkerState\");\n  return (\n    <div className={classes.gmapconfig}>\n      <LoadScript googleMapsApiKey=\"AIzaSyAR3-8wOXn2f7NcmF4cOF6xkTHqH5bJpqY\">\n        <GoogleMap\n          id=\"marker-example\"\n          mapContainerStyle={mapContainerStyle}\n          zoom={15}\n          center={center}\n          onClick={mapClickHandler}\n        >\n          {\" \"}\n          {console.log(tmepMarkerState)}\n          {Object.keys(tmepMarkerState).length && (\n            <Marker position={tmepMarkerState} />\n          )}\n          {Object.keys(props.pinMarker).length && (\n            <MarkerClusterer options={options}>\n              {(clusterer) =>\n                props.pinMarker.map((info) => {\n                  {\n                    /* <Marker key={createKey(info.gps)} position={info.gps} clusterer={clusterer}  onClick={markerClickHandler} draggable={true} onDragStart={dragStartHandler} onDragEnd={dropRefreshHandler}/>  */\n                  }\n                  return (\n                    <Marker\n                      key={createKey(info.gps)}\n                      position={info.gps}\n                      clusterer={clusterer}\n                      onClick={markerClickHandler}\n                    />\n                  );\n                })\n              }\n            </MarkerClusterer>\n          )}\n          {infoWinState && !props.info.del && (\n            <InfoWindow onLoad={onload} position={infoLocationState}>\n              <div>\n                <h6>{props.info.location}</h6>\n                <p>{props.info.text}</p>\n              </div>\n            </InfoWindow>\n          )}\n        </GoogleMap>\n      </LoadScript>\n      {/* {NewMarkerState.map((location,i)=> {\n          return (<div>{i+1}. {location.lat} {location.lng}</div>)\n        })} */}\n    </div>\n  );\n};\nexport default GMap;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}